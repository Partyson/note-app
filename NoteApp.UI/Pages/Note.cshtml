@page "{id:guid}"
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using NoteApp.UI.Extensions
@model NoteApp.UI.Pages.NoteModel
@{
ViewData["Title"] = "Просмотр заметки";
var note = Model.Note;
var editMode = Model.IsEditing;
}

<h2 class="mb-4">@(editMode ? "Редактировать заметку" : "Заметка")</h2>

<form method="post" class="w-75" style="min-width: 300px;">
    <input type="hidden" asp-for="Note.Id" />

    <!-- Заголовок -->
    <div class="mb-3">
        <label class="form-label">Заголовок</label>
        @if (editMode)
        {
        <input asp-for="Note.Title" class="form-control" />
        }
        else
        {
        <div class="border rounded p-2 bg-light">
            <strong>@note.Title</strong>
        </div>
        }
    </div>

    <!-- Содержимое -->
    <div class="mb-3">
        <label class="form-label">Содержимое</label>
        @if (editMode)
        {
        <textarea asp-for="Note.Content" class="form-control" rows="6"></textarea>
        }
        else
        {
        <div class="border rounded p-3 bg-white" style="white-space: pre-wrap;">
            @note.Content
        </div>
        }
    </div>

    <!-- Приоритет -->
    <div class="mb-3">
        <label class="form-label">Приоритет</label>
        @if (editMode)
        {
        <select asp-for="Note.Importance" class="form-select">
            <option value="Common">Обычный</option>
            <option value="High">Высокий</option>
            <option value="VeryHigh">Очень высокий</option>
        </select>
        }
        else
        {
        <div class="border rounded p-2 bg-light">
            @Model.GetImportanceText(note.Importance)
        </div>
        }
    </div>

    <div class="mb-3">
        <label class="form-label">Папка</label>
        @if (editMode)
        {
        <select asp-for="Note.FolderName" class="form-select">
            <option value="">-- Без папки --</option>
            @foreach (var folder in Model.Folders)
            {
            <option value="@folder.Id" selected="@(folder.Name == note.FolderName)">
                @(folder.Name)
            </option>
            }
        </select>
        }
        else
        {
        <div class="border rounded p-2 bg-light">
            @(string.IsNullOrEmpty(note.FolderName) ? "Без папки" : note.FolderName)
        </div>
        }
    </div>

    
    <div class="mb-2 text-muted">
        <small>Создана: @note.CreatedAt.ToLocalTime()</small>
    </div>
    <div class="mb-4 text-muted">
        <small>Обновлена: @note.UpdatedAt.ToLocalTime()</small>
    </div>
    
    @if (editMode)
    {
    <button type="submit" class="btn btn-success">Сохранить</button>
    <a asp-page="/Note" asp-route-id="@note.Id" class="btn btn-secondary ms-2">Отмена</a>
    }
</form>

@if (!editMode)
{
<div class="mt-4 d-flex gap-2">
    <form method="post" asp-page-handler="ToggleFavorite" class="d-inline">
        <input type="hidden" asp-for="Note.Id" />
        <input type="hidden" asp-for="Note.CreatedAt" />
        <input type="hidden" asp-for="Note.UpdatedAt" />
        <button type="submit" class="btn @(note.IsFavorite ? "btn-outline-danger" : "btn-outline-warning")">
            @(note.IsFavorite ? "Удалить из избранного" : "Добавить в избранное")
        </button>
    </form>
    <a asp-page="/Note" asp-route-id="@note.Id" asp-route-isEditing="true" class="btn btn-outline-primary">Редактировать</a>
    <a asp-page="/Index" class="btn btn-outline-secondary">На главную</a>
</div>
}

@if (Model.Errors?.Any() == true)
{
    <div class="alert alert-danger" role="alert" style="margin-top: 10px">
        <ul>
            @foreach (var error in Model.Errors)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}